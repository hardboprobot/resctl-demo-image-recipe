{{ $ospack := or .ospack "resctl-demo-ospack" }}
{{ $image := or .image "resctl-demo-image-efiboot" }}
{{ $imagesize := or .imagesize "16GB" }}
{{ $cmdline := or .cmdline "root=LABEL=system console=tty0 console=ttyS0,115200n1 rootwait fsck.mode=auto fsck.repair=yes systemd.unified_cgroup_hierarchy=1" }}

architecture: amd64

actions:
  - action: image-partition
    imagename: {{ $image }}.img
    imagesize: {{ $imagesize }}
    partitiontype: gpt
    mountpoints:
      - mountpoint: /
        partition: system
        options:
          - rw
          - discard=async
      - mountpoint: /boot/efi
        partition: EFI
    partitions:
      - name: EFI
        partlabel: efi
        parttype: c12a7328-f81f-11d2-ba4b-00a0c93ec93b
        fs: vfat
        start: 6176s
        end: 256M
        flags: [ boot ]
      - name: system
        fs: btrfs
        start: 256M
        end: 100%

  - action: filesystem-deploy
    description: Deploying ospack onto image
    append-kernel-cmdline: {{ $cmdline }}

  - action: unpack
    file: {{ $ospack }}.tar.gz

  - action: run
    description: Mount rootfs by LABEL instead of UUID
    command: |
      UUID=$(blkid "${IMAGE}-part2" -o export | grep "^UUID=")
      sed -i "s/${UUID}/LABEL=system/g" ${ROOTDIR}/etc/fstab

  - action: run
    description: Setup bootloader
    label: setup-bootloader.sh
    chroot: true
    script: scripts/setup-bootloader.sh "x86_64-efi" "{{ $cmdline }}"

  - action: run
    description: Examine disk size
    chroot: true
    command: df -h / /boot/efi

  - action: run
    description: Convert {{ $image }}.img to {{ $image }}.vmdk
    postprocess: true
    command: qemu-img convert -f raw -O vmdk -o subformat=streamOptimized {{ $image }}.img {{ $image }}.vmdk

  - action: run
    description: Create block map for {{ $image }}.img
    postprocess: true
    command: bmaptool create {{ $image }}.img > {{ $image }}.img.bmap

  - action: run
    description: Compress {{ $image }}.img
    postprocess: true
    command: pigz -f -k {{ $image }}.img

  - action: run
    description: Checksum for {{ $image }}.img.gz
    postprocess: true
    command: sha256sum {{ $image }}.img.gz > {{ $image }}.img.gz.sha256
