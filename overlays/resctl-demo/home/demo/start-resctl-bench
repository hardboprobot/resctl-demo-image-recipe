#!/bin/bash
# Copyright Â© 2020 Collabora Ltd.
# SPDX-License-Identifier: MIT
OUTPUT_DIR="/mnt/results"

function cleanup {
  sudo rm -f /var/lib/resctl-demo/bench.json
  sudo umount "$OUTPUT_DIR" >/dev/null 2>&1 || true
}

# Make sure the results drive is unmounted on exit
trap cleanup SIGINT

# Silently unmount results usb stick if still connected
cleanup

# make sure base dir perm matches what resctl-demo would create
RD_DIR="/var/lib/resctl-demo"
sudo mkdir -p ${RD_DIR}
sudo chown root.sudo ${RD_DIR}
sudo chmod u+w,g+ws ${RD_DIR}

echo "Starting resctl-bench..."
sleep 5

# show mount failed dialog - loop until user plugs in disk
while : ; do
  sudo mkdir -p "$OUTPUT_DIR"
  sudo mount PARTLABEL=results "$OUTPUT_DIR"
  if [ $? = 0 ] ; then
    break
  fi

  dialog --clear \
    --backtitle "resctl-bench" \
    --title "Insert flasher USB" \
    --yesno "Could not mount flasher USB. Please connect flasher USB to the machine and press enter to retry.\n\nChoose no to exit to the shell." \
    20 0
  if [ $? != 0 ] ; then
    exit 1
  fi
done

# TODO figure out block device & build filename from model /sys/block/*/device/model
TIMESTAMP=$(date "+%Y_%m_%d-%H_%M_%S")
FILENAME="resctl-bench-result_$TIMESTAMP"
RESULT_JSON="$OUTPUT_DIR/$FILENAME.json.gz"
RESULT_SUMMARY="$OUTPUT_DIR/$FILENAME.txt"
RESULT_PDF="$OUTPUT_DIR/$FILENAME.pdf"
echo "Saving result to $RESULT_JSON"

# Exit on error
set -e

# Create benchmark using resctl-bench & convert results to PDF/TXT
sudo resctl-bench -r "$RESULT_JSON" run iocost-tune
sudo resctl-bench -r "$RESULT_JSON" format iocost-tune:pdf=$RESULT_PDF >/dev/null
sudo resctl-bench -r "$RESULT_JSON" format | sudo tee "$RESULT_SUMMARY" >/dev/null

echo "resctl-bench finshed successfully!"
echo "Results saved to USB stick as $FILENAME"
cleanup
