name: Build resctl-demo images
on:
  pull_request:
  push:
  # Build every 1st day of the month since artifacts only last 90-days
  schedule:
    - cron: "* * 1 * *"
  workflow_dispatch:

jobs:
  build_image:
    strategy:
      fail-fast: false
      matrix:
        variant:
          - resctl-demo
          - resctl-demo-meta
    name: Build ${{ matrix.variant }} image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y debian-archive-keyring \
                                  debos \
                                  libostree-dev \
                                  qemu-utils

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'

      - name: Install debos from source
        run: |
          go install github.com/go-debos/debos/cmd/debos@main
          sudo -H ln -sf $HOME/go/bin/debos /usr/bin/debos

      - name: Download kernel
        uses: dawidd6/action-download-artifact@v2
        with:
          repo: iocost-benchmark/resctl-demo-linux
          branch: resctl-demo
          workflow: ci.yaml
          workflow_conclusion: success
          path: debs/

      - name: Move kernel into the correct place
        run: |
          mv debs/resctl-demo-kernel/* debs/
          find debs

      - name: Create output directory
        run: mkdir out

      - name: Build ospack
        run: sudo debos --disable-fakemachine --artifactdir=out --template-var=variant:${{ matrix.variant }} --scratchsize=16G resctl-demo-ospack.yaml

      - name: Build EFI images
        run: |
          sudo debos --disable-fakemachine --artifactdir=out --template-var=variant:${{ matrix.variant }} resctl-demo-image-efiboot.yaml
          sudo debos --disable-fakemachine --artifactdir=out --template-var=variant:${{ matrix.variant }} resctl-demo-flasher-efiboot.yaml

      - name: Build Legacy boot image
        if: matrix.variant == 'resctl-demo'
        run: sudo debos --disable-fakemachine --artifactdir=out --template-var=variant:${{ matrix.variant }} --scratchsize=16G resctl-demo-ospack.yaml

      - name: Upload Legacy boot image to AWS EC2
        if: matrix.variant == 'resctl-demo'
        run: |
          VERSION="${GITHUB_REF##*/}-$(date '+%Y%m%d.%H%M%S')-${GITHUB_SHA::7}"
          echo "Version: $VERSION"

          pip3 install --requirement requirements.txt
          python3 aws-ec2/upload-image-aws-ec2.py --ami-name="resctl-demo/bookworm/${VERSION}"
                                                  --ami-description="resctl-demo version ${VERSION}"
                                                  --image-file="out/resctl-demo-image-legacyboot.vmdk"

      - name: Publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.variant }}
          path: |
            out/
            !out/*.img
          if-no-files-found: error
